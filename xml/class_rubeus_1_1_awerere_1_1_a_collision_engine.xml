<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="class_rubeus_1_1_awerere_1_1_a_collision_engine" kind="class" language="C++" prot="public">
    <compoundname>Rubeus::Awerere::ACollisionEngine</compoundname>
    <includes refid="awerere__collision__engine_8h" local="no">awerere_collision_engine.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_rubeus_1_1_awerere_1_1_a_collision_engine_1ac659a15d829c9d14f1cd9142c93a175b" prot="private" static="no" mutable="no">
        <type><ref refid="struct_rubeus_1_1_awerere_1_1_collision_grid" kindref="compound">CollisionGrid</ref></type>
        <definition>CollisionGrid Rubeus::Awerere::ACollisionEngine::m_CollisionGrid</definition>
        <argsstring></argsstring>
        <name>m_CollisionGrid</name>
        <briefdescription>
<para>Collision grid required for broadphase. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/serious/Desktop/SDSLabs/Rubeus/RubeusCore/Include/awerere_collision_engine.h" line="33" column="1" bodyfile="/home/serious/Desktop/SDSLabs/Rubeus/RubeusCore/Include/awerere_collision_engine.h" bodystart="33" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_rubeus_1_1_awerere_1_1_a_collision_engine_1a0cc178f2ff620f890469c894520855eb" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="class_rubeus_1_1_r_game_object" kindref="compound">RGameObject</ref> * &gt;</type>
        <definition>std::vector&lt;RGameObject *&gt; Rubeus::Awerere::ACollisionEngine::m_GameObjects</definition>
        <argsstring></argsstring>
        <name>m_GameObjects</name>
        <briefdescription>
<para>Array of game objects to be checked for collision events. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/serious/Desktop/SDSLabs/Rubeus/RubeusCore/Include/awerere_collision_engine.h" line="36" column="1" bodyfile="/home/serious/Desktop/SDSLabs/Rubeus/RubeusCore/Include/awerere_collision_engine.h" bodystart="36" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_rubeus_1_1_awerere_1_1_a_collision_engine_1a195fb2d2610222f8e87a294561b9e3cf" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="class_rubeus_1_1_awerere_1_1_a_flag" kindref="compound">AFlag</ref> &gt;</type>
        <definition>std::vector&lt;AFlag&gt; Rubeus::Awerere::ACollisionEngine::m_XFlags</definition>
        <argsstring></argsstring>
        <name>m_XFlags</name>
        <briefdescription>
<para>Array of grid unit flags across X axis for each game object. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/serious/Desktop/SDSLabs/Rubeus/RubeusCore/Include/awerere_collision_engine.h" line="39" column="1" bodyfile="/home/serious/Desktop/SDSLabs/Rubeus/RubeusCore/Include/awerere_collision_engine.h" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_rubeus_1_1_awerere_1_1_a_collision_engine_1a3addb06f0dca03463a0fa2b3a4aaad84" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="class_rubeus_1_1_awerere_1_1_a_flag" kindref="compound">AFlag</ref> &gt;</type>
        <definition>std::vector&lt;AFlag&gt; Rubeus::Awerere::ACollisionEngine::m_YFlags</definition>
        <argsstring></argsstring>
        <name>m_YFlags</name>
        <briefdescription>
<para>Array of grid unit flags across Y axis for each game object. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/serious/Desktop/SDSLabs/Rubeus/RubeusCore/Include/awerere_collision_engine.h" line="42" column="1" bodyfile="/home/serious/Desktop/SDSLabs/Rubeus/RubeusCore/Include/awerere_collision_engine.h" bodystart="42" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="class_rubeus_1_1_awerere_1_1_a_collision_engine_1aa17d5b7de6294890084566c09b7d5f3f" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class APhysicsEngine</definition>
        <argsstring></argsstring>
        <name>APhysicsEngine</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/serious/Desktop/SDSLabs/Rubeus/RubeusCore/Include/awerere_collision_engine.h" line="44" column="1" bodyfile="/home/serious/Desktop/SDSLabs/Rubeus/RubeusCore/Include/awerere_collision_engine.h" bodystart="44" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_rubeus_1_1_awerere_1_1_a_collision_engine_1ae32f0c7d77c6ec909d87d1d713f041d2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Rubeus::Awerere::ACollisionEngine::ACollisionEngine</definition>
        <argsstring>(std::vector&lt; RGameObject *&gt; &amp;gameObjects, const float &amp;gridHeight, const float &amp;gridWidth, const float &amp;cellHeight, const float &amp;cellWidth)</argsstring>
        <name>ACollisionEngine</name>
        <param>
          <type>std::vector&lt; <ref refid="class_rubeus_1_1_r_game_object" kindref="compound">RGameObject</ref> *&gt; &amp;</type>
          <declname>gameObjects</declname>
        </param>
        <param>
          <type>const float &amp;</type>
          <declname>gridHeight</declname>
        </param>
        <param>
          <type>const float &amp;</type>
          <declname>gridWidth</declname>
        </param>
        <param>
          <type>const float &amp;</type>
          <declname>cellHeight</declname>
        </param>
        <param>
          <type>const float &amp;</type>
          <declname>cellWidth</declname>
        </param>
        <briefdescription>
<para>Constructor. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>gameObjects</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference to array of active gameobjects. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>gridHeight</parametername>
</parameternamelist>
<parameterdescription>
<para>Height of collision grid. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>gridWidth</parametername>
</parameternamelist>
<parameterdescription>
<para>Width of collision grid. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cellWidth</parametername>
</parameternamelist>
<parameterdescription>
<para>Width of collision grid cell. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cellWidth</parametername>
</parameternamelist>
<parameterdescription>
<para>Width of collision grid cell. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/serious/Desktop/SDSLabs/Rubeus/RubeusCore/Include/awerere_collision_engine.h" line="59" column="1" bodyfile="/home/serious/Desktop/SDSLabs/Rubeus/RubeusCore/Source/awerere_collision_engine.cpp" bodystart="17" bodyend="37"/>
      </memberdef>
      <memberdef kind="function" id="class_rubeus_1_1_awerere_1_1_a_collision_engine_1a2936d5dc03b4aaa5fdfb3ee09549156b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Rubeus::Awerere::ACollisionEngine::~ACollisionEngine</definition>
        <argsstring>()</argsstring>
        <name>~ACollisionEngine</name>
        <briefdescription>
<para>Destructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/serious/Desktop/SDSLabs/Rubeus/RubeusCore/Include/awerere_collision_engine.h" line="66" column="1" bodyfile="/home/serious/Desktop/SDSLabs/Rubeus/RubeusCore/Source/awerere_collision_engine.cpp" bodystart="39" bodyend="41"/>
      </memberdef>
      <memberdef kind="function" id="class_rubeus_1_1_awerere_1_1_a_collision_engine_1affca621eb858280450ef062113489db8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Rubeus::Awerere::ACollisionEngine::updateAndAssignFlags</definition>
        <argsstring>(const float &amp;deltaTime)</argsstring>
        <name>updateAndAssignFlags</name>
        <param>
          <type>const float &amp;</type>
          <declname>deltaTime</declname>
        </param>
        <briefdescription>
<para>Assign grid flags for each game object. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="warning"><para>Uses a 2D grid</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>deltaTime</parametername>
</parameternamelist>
<parameterdescription>
<para>The timestep for the update </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/serious/Desktop/SDSLabs/Rubeus/RubeusCore/Include/awerere_collision_engine.h" line="76" column="1" bodyfile="/home/serious/Desktop/SDSLabs/Rubeus/RubeusCore/Source/awerere_collision_engine.cpp" bodystart="43" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="class_rubeus_1_1_awerere_1_1_a_collision_engine_1a7cbbee2bec17e37f9a81932014cafd99" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Rubeus::Awerere::ACollisionEngine::checkCollisions</definition>
        <argsstring>(const int &amp;i)</argsstring>
        <name>checkCollisions</name>
        <param>
          <type>const int &amp;</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>A helper function to check collision from the a particular index in the world object array. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>i</parametername>
</parameternamelist>
<parameterdescription>
<para>The gameobject index. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/serious/Desktop/SDSLabs/Rubeus/RubeusCore/Include/awerere_collision_engine.h" line="85" column="1" bodyfile="/home/serious/Desktop/SDSLabs/Rubeus/RubeusCore/Source/awerere_collision_engine.cpp" bodystart="58" bodyend="98"/>
      </memberdef>
      <memberdef kind="function" id="class_rubeus_1_1_awerere_1_1_a_collision_engine_1a3264d72341c146ad798917e3c99ba7af" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Rubeus::Awerere::ACollisionEngine::collisionResolution</definition>
        <argsstring>()</argsstring>
        <name>collisionResolution</name>
        <briefdescription>
<para>Attempt a broadphase resolution. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/serious/Desktop/SDSLabs/Rubeus/RubeusCore/Include/awerere_collision_engine.h" line="92" column="1" bodyfile="/home/serious/Desktop/SDSLabs/Rubeus/RubeusCore/Source/awerere_collision_engine.cpp" bodystart="100" bodyend="112"/>
      </memberdef>
      <memberdef kind="function" id="class_rubeus_1_1_awerere_1_1_a_collision_engine_1a43d66552404118da1e887932f59f5511" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Rubeus::Awerere::ACollisionEngine::narrowPhaseResolution</definition>
        <argsstring>(RGameObject &amp;left, RGameObject &amp;right)</argsstring>
        <name>narrowPhaseResolution</name>
        <param>
          <type><ref refid="class_rubeus_1_1_r_game_object" kindref="compound">RGameObject</ref> &amp;</type>
          <declname>left</declname>
        </param>
        <param>
          <type><ref refid="class_rubeus_1_1_r_game_object" kindref="compound">RGameObject</ref> &amp;</type>
          <declname>right</declname>
        </param>
        <briefdescription>
<para>Attempt narrowphase resolution on positive results of braodphase resolution. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>left</parametername>
</parameternamelist>
<parameterdescription>
<para>The left argument. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>right</parametername>
</parameternamelist>
<parameterdescription>
<para>The right argument. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/serious/Desktop/SDSLabs/Rubeus/RubeusCore/Include/awerere_collision_engine.h" line="102" column="1" bodyfile="/home/serious/Desktop/SDSLabs/Rubeus/RubeusCore/Source/awerere_collision_engine.cpp" bodystart="114" bodyend="269"/>
      </memberdef>
      <memberdef kind="function" id="class_rubeus_1_1_awerere_1_1_a_collision_engine_1a5746ede74951390f775e2eeb8c917056" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_rubeus_1_1_awerere_1_1_a_collide_data" kindref="compound">ACollideData</ref></type>
        <definition>ACollideData Rubeus::Awerere::ACollisionEngine::multiplexColliders</definition>
        <argsstring>(ACollider *left, const EColliderType &amp;leftType, ACollider *right, const EColliderType &amp;rightType)</argsstring>
        <name>multiplexColliders</name>
        <param>
          <type><ref refid="class_rubeus_1_1_awerere_1_1_a_collider" kindref="compound">ACollider</ref> *</type>
          <declname>left</declname>
        </param>
        <param>
          <type>const <ref refid="namespace_rubeus_1_1_awerere_1aa31f43f0fcc41516bb0aa51cb1d88a08" kindref="member">EColliderType</ref> &amp;</type>
          <declname>leftType</declname>
        </param>
        <param>
          <type><ref refid="class_rubeus_1_1_awerere_1_1_a_collider" kindref="compound">ACollider</ref> *</type>
          <declname>right</declname>
        </param>
        <param>
          <type>const <ref refid="namespace_rubeus_1_1_awerere_1aa31f43f0fcc41516bb0aa51cb1d88a08" kindref="member">EColliderType</ref> &amp;</type>
          <declname>rightType</declname>
        </param>
        <briefdescription>
<para>Invoke collider specific collision algorithms on arguemnts based on the multiplexed collider type. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="warning"><para>Select lines are EColliderType values</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>left</parametername>
</parameternamelist>
<parameterdescription>
<para>Left collider. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>leftType</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of Left collider. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>right</parametername>
</parameternamelist>
<parameterdescription>
<para>Right collider. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rightType</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of right collider.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Collision data. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/serious/Desktop/SDSLabs/Rubeus/RubeusCore/Include/awerere_collision_engine.h" line="117" column="1" bodyfile="/home/serious/Desktop/SDSLabs/Rubeus/RubeusCore/Source/awerere_collision_engine.cpp" bodystart="271" bodyend="320"/>
      </memberdef>
      <memberdef kind="function" id="class_rubeus_1_1_awerere_1_1_a_collision_engine_1ac0e5a4aefa5601396a77a88c108b14f6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Rubeus::Awerere::ACollisionEngine::setGameObjectArray</definition>
        <argsstring>(std::vector&lt; RGameObject *&gt; gameObjects)</argsstring>
        <name>setGameObjectArray</name>
        <param>
          <type>std::vector&lt; <ref refid="class_rubeus_1_1_r_game_object" kindref="compound">RGameObject</ref> *&gt;</type>
          <declname>gameObjects</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/serious/Desktop/SDSLabs/Rubeus/RubeusCore/Include/awerere_collision_engine.h" line="126" column="1" bodyfile="/home/serious/Desktop/SDSLabs/Rubeus/RubeusCore/Include/awerere_collision_engine.h" bodystart="126" bodyend="126"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The collision engine responsible for resolution of collisions and generating hit events. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/serious/Desktop/SDSLabs/Rubeus/RubeusCore/Include/awerere_collision_engine.h" line="29" column="1" bodyfile="/home/serious/Desktop/SDSLabs/Rubeus/RubeusCore/Include/awerere_collision_engine.h" bodystart="28" bodyend="130"/>
    <listofallmembers>
      <member refid="class_rubeus_1_1_awerere_1_1_a_collision_engine_1ae32f0c7d77c6ec909d87d1d713f041d2" prot="public" virt="non-virtual"><scope>Rubeus::Awerere::ACollisionEngine</scope><name>ACollisionEngine</name></member>
      <member refid="class_rubeus_1_1_awerere_1_1_a_collision_engine_1aa17d5b7de6294890084566c09b7d5f3f" prot="private" virt="non-virtual"><scope>Rubeus::Awerere::ACollisionEngine</scope><name>APhysicsEngine</name></member>
      <member refid="class_rubeus_1_1_awerere_1_1_a_collision_engine_1a7cbbee2bec17e37f9a81932014cafd99" prot="public" virt="non-virtual"><scope>Rubeus::Awerere::ACollisionEngine</scope><name>checkCollisions</name></member>
      <member refid="class_rubeus_1_1_awerere_1_1_a_collision_engine_1a3264d72341c146ad798917e3c99ba7af" prot="public" virt="non-virtual"><scope>Rubeus::Awerere::ACollisionEngine</scope><name>collisionResolution</name></member>
      <member refid="class_rubeus_1_1_awerere_1_1_a_collision_engine_1ac659a15d829c9d14f1cd9142c93a175b" prot="private" virt="non-virtual"><scope>Rubeus::Awerere::ACollisionEngine</scope><name>m_CollisionGrid</name></member>
      <member refid="class_rubeus_1_1_awerere_1_1_a_collision_engine_1a0cc178f2ff620f890469c894520855eb" prot="private" virt="non-virtual"><scope>Rubeus::Awerere::ACollisionEngine</scope><name>m_GameObjects</name></member>
      <member refid="class_rubeus_1_1_awerere_1_1_a_collision_engine_1a195fb2d2610222f8e87a294561b9e3cf" prot="private" virt="non-virtual"><scope>Rubeus::Awerere::ACollisionEngine</scope><name>m_XFlags</name></member>
      <member refid="class_rubeus_1_1_awerere_1_1_a_collision_engine_1a3addb06f0dca03463a0fa2b3a4aaad84" prot="private" virt="non-virtual"><scope>Rubeus::Awerere::ACollisionEngine</scope><name>m_YFlags</name></member>
      <member refid="class_rubeus_1_1_awerere_1_1_a_collision_engine_1a5746ede74951390f775e2eeb8c917056" prot="public" virt="non-virtual"><scope>Rubeus::Awerere::ACollisionEngine</scope><name>multiplexColliders</name></member>
      <member refid="class_rubeus_1_1_awerere_1_1_a_collision_engine_1a43d66552404118da1e887932f59f5511" prot="public" virt="non-virtual"><scope>Rubeus::Awerere::ACollisionEngine</scope><name>narrowPhaseResolution</name></member>
      <member refid="class_rubeus_1_1_awerere_1_1_a_collision_engine_1ac0e5a4aefa5601396a77a88c108b14f6" prot="public" virt="non-virtual"><scope>Rubeus::Awerere::ACollisionEngine</scope><name>setGameObjectArray</name></member>
      <member refid="class_rubeus_1_1_awerere_1_1_a_collision_engine_1affca621eb858280450ef062113489db8" prot="public" virt="non-virtual"><scope>Rubeus::Awerere::ACollisionEngine</scope><name>updateAndAssignFlags</name></member>
      <member refid="class_rubeus_1_1_awerere_1_1_a_collision_engine_1a2936d5dc03b4aaa5fdfb3ee09549156b" prot="public" virt="non-virtual"><scope>Rubeus::Awerere::ACollisionEngine</scope><name>~ACollisionEngine</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
