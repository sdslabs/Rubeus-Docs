<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="class_rubeus_1_1_awerere_1_1_a_plane_collider" kind="class" language="C++" prot="public">
    <compoundname>Rubeus::Awerere::APlaneCollider</compoundname>
    <basecompoundref refid="class_rubeus_1_1_awerere_1_1_a_collider" prot="public" virt="non-virtual">Rubeus::Awerere::ACollider</basecompoundref>
    <includes refid="awerere__plane__collider__object_8h" local="no">awerere_plane_collider_object.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_rubeus_1_1_awerere_1_1_a_plane_collider_1ae190504f3a5df8785289f7d91807940c" prot="private" static="no" mutable="yes">
        <type><ref refid="struct_r_m_l_1_1_vector3_d" kindref="compound">RML::Vector3D</ref></type>
        <definition>RML::Vector3D Rubeus::Awerere::APlaneCollider::m_Normal</definition>
        <argsstring></argsstring>
        <name>m_Normal</name>
        <briefdescription>
<para>Normal vector used to define a plane in 3D. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/serious/Desktop/SDSLabs/Rubeus/RubeusCore/Include/awerere_plane_collider_object.h" line="28" column="1" bodyfile="/home/serious/Desktop/SDSLabs/Rubeus/RubeusCore/Include/awerere_plane_collider_object.h" bodystart="28" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_rubeus_1_1_awerere_1_1_a_plane_collider_1a0be9d7f87dbf538e3409882c545deffd" prot="private" static="no" mutable="no">
        <type><ref refid="struct_r_m_l_1_1_vector3_d" kindref="compound">RML::Vector3D</ref></type>
        <definition>RML::Vector3D Rubeus::Awerere::APlaneCollider::m_EmergencePoint</definition>
        <argsstring></argsstring>
        <name>m_EmergencePoint</name>
        <briefdescription>
<para>A fixed point through which the 2D plane plasses through. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/serious/Desktop/SDSLabs/Rubeus/RubeusCore/Include/awerere_plane_collider_object.h" line="31" column="1" bodyfile="/home/serious/Desktop/SDSLabs/Rubeus/RubeusCore/Include/awerere_plane_collider_object.h" bodystart="31" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_rubeus_1_1_awerere_1_1_a_plane_collider_1ab482ae77719f4ae57c83cedd0d26dbcb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Rubeus::Awerere::APlaneCollider::APlaneCollider</definition>
        <argsstring>(const RML::Vector3D &amp;normal, RML::Vector3D &amp;emergencePoint)</argsstring>
        <name>APlaneCollider</name>
        <param>
          <type>const <ref refid="struct_r_m_l_1_1_vector3_d" kindref="compound">RML::Vector3D</ref> &amp;</type>
          <declname>normal</declname>
        </param>
        <param>
          <type><ref refid="struct_r_m_l_1_1_vector3_d" kindref="compound">RML::Vector3D</ref> &amp;</type>
          <declname>emergencePoint</declname>
        </param>
        <briefdescription>
<para>Contructor. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>normal</parametername>
</parameternamelist>
<parameterdescription>
<para>The normal vector of the 2D plane. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>emergencePoint</parametername>
</parameternamelist>
<parameterdescription>
<para>The fixed point through which the plane is defined. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/serious/Desktop/SDSLabs/Rubeus/RubeusCore/Include/awerere_plane_collider_object.h" line="43" column="1" bodyfile="/home/serious/Desktop/SDSLabs/Rubeus/RubeusCore/Source/awerere_plane_collider_object.cpp" bodystart="16" bodyend="20"/>
      </memberdef>
      <memberdef kind="function" id="class_rubeus_1_1_awerere_1_1_a_plane_collider_1a198b74f33024e90ac8b30c95da1285bf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Rubeus::Awerere::APlaneCollider::~APlaneCollider</definition>
        <argsstring>()</argsstring>
        <name>~APlaneCollider</name>
        <briefdescription>
<para>Destructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/serious/Desktop/SDSLabs/Rubeus/RubeusCore/Include/awerere_plane_collider_object.h" line="50" column="1" bodyfile="/home/serious/Desktop/SDSLabs/Rubeus/RubeusCore/Source/awerere_plane_collider_object.cpp" bodystart="22" bodyend="24"/>
      </memberdef>
      <memberdef kind="function" id="class_rubeus_1_1_awerere_1_1_a_plane_collider_1a8282df86b916c12865beb5e32c557316" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void Rubeus::Awerere::APlaneCollider::selfUpdate</definition>
        <argsstring>(float deltaX, float deltaY) override</argsstring>
        <name>selfUpdate</name>
        <reimplements refid="class_rubeus_1_1_awerere_1_1_a_collider_1ab0088d47ab69b3ecb0b0a020de8c33d6">selfUpdate</reimplements>
        <param>
          <type>float</type>
          <declname>deltaX</declname>
        </param>
        <param>
          <type>float</type>
          <declname>deltaY</declname>
        </param>
        <briefdescription>
<para>Update the emergencePoint with the parameters passed in. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>deltaX</parametername>
</parameternamelist>
<parameterdescription>
<para>The change in X position. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>deltaY</parametername>
</parameternamelist>
<parameterdescription>
<para>The change in Y position. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/serious/Desktop/SDSLabs/Rubeus/RubeusCore/Include/awerere_plane_collider_object.h" line="60" column="1" bodyfile="/home/serious/Desktop/SDSLabs/Rubeus/RubeusCore/Source/awerere_plane_collider_object.cpp" bodystart="26" bodyend="30"/>
      </memberdef>
      <memberdef kind="function" id="class_rubeus_1_1_awerere_1_1_a_plane_collider_1a1c4a6a99fa4e8d6de93bcaa806554e53" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="class_rubeus_1_1_awerere_1_1_a_collide_data" kindref="compound">ACollideData</ref></type>
        <definition>ACollideData Rubeus::Awerere::APlaneCollider::tryIntersect</definition>
        <argsstring>(APlaneCollider &amp;plane) override</argsstring>
        <name>tryIntersect</name>
        <reimplements refid="class_rubeus_1_1_awerere_1_1_a_collider_1a18c5893ff435d68cb7495f9c9ddd6d48">tryIntersect</reimplements>
        <param>
          <type><ref refid="class_rubeus_1_1_awerere_1_1_a_plane_collider" kindref="compound">APlaneCollider</ref> &amp;</type>
          <declname>plane</declname>
        </param>
        <briefdescription>
<para>Generate collision data with a plane collider. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>plane</parametername>
</parameternamelist>
<parameterdescription>
<para>The plane collider to check collision with.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Collision data. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/serious/Desktop/SDSLabs/Rubeus/RubeusCore/Include/awerere_plane_collider_object.h" line="71" column="1" bodyfile="/home/serious/Desktop/SDSLabs/Rubeus/RubeusCore/Source/awerere_plane_collider_object.cpp" bodystart="32" bodyend="41"/>
      </memberdef>
      <memberdef kind="function" id="class_rubeus_1_1_awerere_1_1_a_plane_collider_1a1d3c9f90a5b7427f4aaa69b75466bacb" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="class_rubeus_1_1_awerere_1_1_a_collide_data" kindref="compound">ACollideData</ref></type>
        <definition>ACollideData Rubeus::Awerere::APlaneCollider::tryIntersect</definition>
        <argsstring>(ASphereCollider &amp;sphere) override</argsstring>
        <name>tryIntersect</name>
        <reimplements refid="class_rubeus_1_1_awerere_1_1_a_collider_1a5a6b4e7886914d394913e570ecbf1fb4">tryIntersect</reimplements>
        <param>
          <type><ref refid="class_rubeus_1_1_awerere_1_1_a_sphere_collider" kindref="compound">ASphereCollider</ref> &amp;</type>
          <declname>sphere</declname>
        </param>
        <briefdescription>
<para>Generate collision data with a sphere collider. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sphere</parametername>
</parameternamelist>
<parameterdescription>
<para>The sphere collider to check collision with.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Collision data. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/serious/Desktop/SDSLabs/Rubeus/RubeusCore/Include/awerere_plane_collider_object.h" line="82" column="1" bodyfile="/home/serious/Desktop/SDSLabs/Rubeus/RubeusCore/Source/awerere_plane_collider_object.cpp" bodystart="43" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="class_rubeus_1_1_awerere_1_1_a_plane_collider_1a14341e6e945308d550528f07b389ba83" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="class_rubeus_1_1_awerere_1_1_a_collide_data" kindref="compound">ACollideData</ref></type>
        <definition>ACollideData Rubeus::Awerere::APlaneCollider::tryIntersect</definition>
        <argsstring>(ABoxCollider &amp;box) override</argsstring>
        <name>tryIntersect</name>
        <reimplements refid="class_rubeus_1_1_awerere_1_1_a_collider_1ac9295068ab11ba7b11e7d18f453298bc">tryIntersect</reimplements>
        <param>
          <type><ref refid="class_rubeus_1_1_awerere_1_1_a_box_collider" kindref="compound">ABoxCollider</ref> &amp;</type>
          <declname>box</declname>
        </param>
        <briefdescription>
<para>Generate collision data with a box collider. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>box</parametername>
</parameternamelist>
<parameterdescription>
<para>The box collider to check collision with.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Collision data. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/serious/Desktop/SDSLabs/Rubeus/RubeusCore/Include/awerere_plane_collider_object.h" line="93" column="1" bodyfile="/home/serious/Desktop/SDSLabs/Rubeus/RubeusCore/Source/awerere_plane_collider_object.cpp" bodystart="53" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="class_rubeus_1_1_awerere_1_1_a_plane_collider_1ac1296c4e987cc2e08d227acbdaaea703" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_r_m_l_1_1_vector3_d" kindref="compound">RML::Vector3D</ref></type>
        <definition>RML::Vector3D Rubeus::Awerere::APlaneCollider::normalised</definition>
        <argsstring>(const RML::Vector3D &amp;vector) const</argsstring>
        <name>normalised</name>
        <param>
          <type>const <ref refid="struct_r_m_l_1_1_vector3_d" kindref="compound">RML::Vector3D</ref> &amp;</type>
          <declname>vector</declname>
        </param>
        <briefdescription>
<para>Normalise a vector by converting it into a unit vector. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vector</parametername>
</parameternamelist>
<parameterdescription>
<para>The vector to normalise.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The normalised vector. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/serious/Desktop/SDSLabs/Rubeus/RubeusCore/Include/awerere_plane_collider_object.h" line="104" column="1" bodyfile="/home/serious/Desktop/SDSLabs/Rubeus/RubeusCore/Source/awerere_plane_collider_object.cpp" bodystart="69" bodyend="73"/>
      </memberdef>
      <memberdef kind="function" id="class_rubeus_1_1_awerere_1_1_a_plane_collider_1af6e924e8d23c077206574ce8575f786b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_r_m_l_1_1_vector3_d" kindref="compound">RML::Vector3D</ref></type>
        <definition>RML::Vector3D Rubeus::Awerere::APlaneCollider::getNormal</definition>
        <argsstring>() const</argsstring>
        <name>getNormal</name>
        <briefdescription>
<para>Returns the normal of this plane. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The vector 3D normal. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/serious/Desktop/SDSLabs/Rubeus/RubeusCore/Include/awerere_plane_collider_object.h" line="113" column="1" bodyfile="/home/serious/Desktop/SDSLabs/Rubeus/RubeusCore/Include/awerere_plane_collider_object.h" bodystart="113" bodyend="113"/>
      </memberdef>
      <memberdef kind="function" id="class_rubeus_1_1_awerere_1_1_a_plane_collider_1a262912a904c556debde5c6c61af7140d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_r_m_l_1_1_vector3_d" kindref="compound">RML::Vector3D</ref></type>
        <definition>RML::Vector3D Rubeus::Awerere::APlaneCollider::getEmergencePoint</definition>
        <argsstring>() const</argsstring>
        <name>getEmergencePoint</name>
        <briefdescription>
<para>Returns a fixed point on the plane. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Position vector of the emergence point. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/serious/Desktop/SDSLabs/Rubeus/RubeusCore/Include/awerere_plane_collider_object.h" line="122" column="1" bodyfile="/home/serious/Desktop/SDSLabs/Rubeus/RubeusCore/Include/awerere_plane_collider_object.h" bodystart="122" bodyend="122"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A 2D plane collider, equivalent to a straight line on a 2D screen. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="47">
        <label>Rubeus::Awerere::ACollider</label>
        <link refid="class_rubeus_1_1_awerere_1_1_a_collider"/>
      </node>
      <node id="46">
        <label>Rubeus::Awerere::APlaneCollider</label>
        <link refid="class_rubeus_1_1_awerere_1_1_a_plane_collider"/>
        <childnode refid="47" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="49">
        <label>Rubeus::Awerere::ACollider</label>
        <link refid="class_rubeus_1_1_awerere_1_1_a_collider"/>
        <childnode refid="50" relation="usage">
          <edgelabel>m_Sprite</edgelabel>
        </childnode>
        <childnode refid="56" relation="usage">
          <edgelabel>m_PhysicsMaterial</edgelabel>
        </childnode>
        <childnode refid="54" relation="usage">
          <edgelabel>m_Force</edgelabel>
          <edgelabel>m_Momentum</edgelabel>
        </childnode>
        <childnode refid="55" relation="usage">
          <edgelabel>m_Position</edgelabel>
        </childnode>
      </node>
      <node id="52">
        <label>RML::Vector4D</label>
        <link refid="struct_r_m_l_1_1_vector4_d"/>
      </node>
      <node id="50">
        <label>Rubeus::GraphicComponents::RSprite</label>
        <link refid="class_rubeus_1_1_graphic_components_1_1_r_sprite"/>
        <childnode refid="51" relation="public-inheritance">
        </childnode>
      </node>
      <node id="55">
        <label>RML::Vector3D</label>
        <link refid="struct_r_m_l_1_1_vector3_d"/>
      </node>
      <node id="53">
        <label>Rubeus::GraphicComponents::RTexture</label>
        <link refid="class_rubeus_1_1_graphic_components_1_1_r_texture"/>
      </node>
      <node id="54">
        <label>RML::Vector2D</label>
        <link refid="struct_r_m_l_1_1_vector2_d"/>
      </node>
      <node id="51">
        <label>Rubeus::GraphicComponents::RRenderableObject</label>
        <link refid="class_rubeus_1_1_graphic_components_1_1_r_renderable_object"/>
        <childnode refid="52" relation="usage">
          <edgelabel>m_Color</edgelabel>
        </childnode>
        <childnode refid="53" relation="usage">
          <edgelabel>m_Texture</edgelabel>
        </childnode>
        <childnode refid="54" relation="usage">
          <edgelabel>m_Size</edgelabel>
        </childnode>
        <childnode refid="55" relation="usage">
          <edgelabel>m_Position</edgelabel>
        </childnode>
      </node>
      <node id="48">
        <label>Rubeus::Awerere::APlaneCollider</label>
        <link refid="class_rubeus_1_1_awerere_1_1_a_plane_collider"/>
        <childnode refid="49" relation="public-inheritance">
        </childnode>
      </node>
      <node id="56">
        <label>Rubeus::Awerere::APhysicsMaterial</label>
        <link refid="class_rubeus_1_1_awerere_1_1_a_physics_material"/>
        <childnode refid="56" relation="usage">
          <edgelabel>DefaultMaterial</edgelabel>
        </childnode>
        <childnode refid="54" relation="usage">
          <edgelabel>m_Gravity</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/serious/Desktop/SDSLabs/Rubeus/RubeusCore/Include/awerere_plane_collider_object.h" line="25" column="1" bodyfile="/home/serious/Desktop/SDSLabs/Rubeus/RubeusCore/Include/awerere_plane_collider_object.h" bodystart="24" bodyend="123"/>
    <listofallmembers>
      <member refid="class_rubeus_1_1_awerere_1_1_a_collider_1a0584d41544674acb77f11cfe038fd1ea" prot="public" virt="non-virtual"><scope>Rubeus::Awerere::APlaneCollider</scope><name>ACollider</name></member>
      <member refid="class_rubeus_1_1_awerere_1_1_a_collider_1a7868c1b6467867bc7eea95c8cc7e450c" prot="public" virt="non-virtual"><scope>Rubeus::Awerere::APlaneCollider</scope><name>ACollider</name></member>
      <member refid="class_rubeus_1_1_awerere_1_1_a_collider_1af4393723cdffa3620d8e3deb3e3fe92f" prot="public" virt="non-virtual"><scope>Rubeus::Awerere::APlaneCollider</scope><name>addForce</name></member>
      <member refid="class_rubeus_1_1_awerere_1_1_a_collider_1a0f91e5056fe7e045865ac60149b83498" prot="public" virt="non-virtual"><scope>Rubeus::Awerere::APlaneCollider</scope><name>addImpulse</name></member>
      <member refid="class_rubeus_1_1_awerere_1_1_a_collider_1ac65dfdf1c393552fe031af59af2a76cf" prot="public" virt="non-virtual"><scope>Rubeus::Awerere::APlaneCollider</scope><name>addMomentum</name></member>
      <member refid="class_rubeus_1_1_awerere_1_1_a_plane_collider_1ab482ae77719f4ae57c83cedd0d26dbcb" prot="public" virt="non-virtual"><scope>Rubeus::Awerere::APlaneCollider</scope><name>APlaneCollider</name></member>
      <member refid="class_rubeus_1_1_awerere_1_1_a_plane_collider_1a262912a904c556debde5c6c61af7140d" prot="public" virt="non-virtual"><scope>Rubeus::Awerere::APlaneCollider</scope><name>getEmergencePoint</name></member>
      <member refid="class_rubeus_1_1_awerere_1_1_a_collider_1af7297ef1a5bcc7a82a8c8110a707d37a" prot="public" virt="non-virtual"><scope>Rubeus::Awerere::APlaneCollider</scope><name>getMomentum</name></member>
      <member refid="class_rubeus_1_1_awerere_1_1_a_plane_collider_1af6e924e8d23c077206574ce8575f786b" prot="public" virt="non-virtual"><scope>Rubeus::Awerere::APlaneCollider</scope><name>getNormal</name></member>
      <member refid="class_rubeus_1_1_awerere_1_1_a_collider_1add6aa6d6bf8e9c47bb5f9262c048d3e3" prot="public" virt="non-virtual"><scope>Rubeus::Awerere::APlaneCollider</scope><name>getPosition</name></member>
      <member refid="class_rubeus_1_1_awerere_1_1_a_collider_1a8d4f849d8d22325ac84e8f9d3ecaa74b" prot="public" virt="non-virtual"><scope>Rubeus::Awerere::APlaneCollider</scope><name>getType</name></member>
      <member refid="class_rubeus_1_1_awerere_1_1_a_plane_collider_1a0be9d7f87dbf538e3409882c545deffd" prot="private" virt="non-virtual"><scope>Rubeus::Awerere::APlaneCollider</scope><name>m_EmergencePoint</name></member>
      <member refid="class_rubeus_1_1_awerere_1_1_a_collider_1a3aea1286d1c31ff389717b07edfe391c" prot="public" virt="non-virtual"><scope>Rubeus::Awerere::APlaneCollider</scope><name>m_Force</name></member>
      <member refid="class_rubeus_1_1_awerere_1_1_a_collider_1a55dd70e134b80d3e64dc3ee5df5388fc" prot="public" virt="non-virtual"><scope>Rubeus::Awerere::APlaneCollider</scope><name>m_Momentum</name></member>
      <member refid="class_rubeus_1_1_awerere_1_1_a_plane_collider_1ae190504f3a5df8785289f7d91807940c" prot="private" virt="non-virtual"><scope>Rubeus::Awerere::APlaneCollider</scope><name>m_Normal</name></member>
      <member refid="class_rubeus_1_1_awerere_1_1_a_collider_1abb9155531aa52189943aae04d7a506c2" prot="public" virt="non-virtual"><scope>Rubeus::Awerere::APlaneCollider</scope><name>m_PhysicsMaterial</name></member>
      <member refid="class_rubeus_1_1_awerere_1_1_a_collider_1ae241ea4b4d3139f06356e5eb522cdb0c" prot="public" virt="non-virtual"><scope>Rubeus::Awerere::APlaneCollider</scope><name>m_Position</name></member>
      <member refid="class_rubeus_1_1_awerere_1_1_a_collider_1a929eacdcc3a29b8b598666085560b442" prot="public" virt="non-virtual"><scope>Rubeus::Awerere::APlaneCollider</scope><name>m_Sprite</name></member>
      <member refid="class_rubeus_1_1_awerere_1_1_a_collider_1afac145eb6d70d70e822923b92f1f56d6" prot="public" virt="non-virtual"><scope>Rubeus::Awerere::APlaneCollider</scope><name>m_Type</name></member>
      <member refid="class_rubeus_1_1_awerere_1_1_a_plane_collider_1ac1296c4e987cc2e08d227acbdaaea703" prot="public" virt="non-virtual"><scope>Rubeus::Awerere::APlaneCollider</scope><name>normalised</name></member>
      <member refid="class_rubeus_1_1_awerere_1_1_a_plane_collider_1a8282df86b916c12865beb5e32c557316" prot="public" virt="virtual"><scope>Rubeus::Awerere::APlaneCollider</scope><name>selfUpdate</name></member>
      <member refid="class_rubeus_1_1_awerere_1_1_a_collider_1afc3bb37605b7032fa75164eea443a199" prot="public" virt="non-virtual"><scope>Rubeus::Awerere::APlaneCollider</scope><name>setMaterial</name></member>
      <member refid="class_rubeus_1_1_awerere_1_1_a_collider_1a0293d08639bec4bdd80700da27962855" prot="public" virt="non-virtual"><scope>Rubeus::Awerere::APlaneCollider</scope><name>setMomentum</name></member>
      <member refid="class_rubeus_1_1_awerere_1_1_a_collider_1aebc1dbcdc45a252b38415d3bf23be6b3" prot="public" virt="non-virtual"><scope>Rubeus::Awerere::APlaneCollider</scope><name>setPosition</name></member>
      <member refid="class_rubeus_1_1_awerere_1_1_a_plane_collider_1a1c4a6a99fa4e8d6de93bcaa806554e53" prot="public" virt="virtual"><scope>Rubeus::Awerere::APlaneCollider</scope><name>tryIntersect</name></member>
      <member refid="class_rubeus_1_1_awerere_1_1_a_plane_collider_1a1d3c9f90a5b7427f4aaa69b75466bacb" prot="public" virt="virtual"><scope>Rubeus::Awerere::APlaneCollider</scope><name>tryIntersect</name></member>
      <member refid="class_rubeus_1_1_awerere_1_1_a_plane_collider_1a14341e6e945308d550528f07b389ba83" prot="public" virt="virtual"><scope>Rubeus::Awerere::APlaneCollider</scope><name>tryIntersect</name></member>
      <member refid="class_rubeus_1_1_awerere_1_1_a_collider_1a0c1bf6dacc6f411a4073843d61458c7f" prot="public" virt="non-virtual" ambiguityscope="Rubeus::Awerere::ACollider::"><scope>Rubeus::Awerere::APlaneCollider</scope><name>tryIntersect</name></member>
      <member refid="class_rubeus_1_1_awerere_1_1_a_collider_1a5f81c81e2a0675319f56a73e30a34e92" prot="public" virt="non-virtual"><scope>Rubeus::Awerere::APlaneCollider</scope><name>update</name></member>
      <member refid="class_rubeus_1_1_awerere_1_1_a_collider_1a10873a3ab1cc36d56b4bf72a9a4c82f4" prot="public" virt="virtual"><scope>Rubeus::Awerere::APlaneCollider</scope><name>~ACollider</name></member>
      <member refid="class_rubeus_1_1_awerere_1_1_a_plane_collider_1a198b74f33024e90ac8b30c95da1285bf" prot="public" virt="non-virtual"><scope>Rubeus::Awerere::APlaneCollider</scope><name>~APlaneCollider</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
